<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://milesrose.net/">
  <channel>
    <title>Jekyll Blog and Portfolio</title>
    <description>a jekyll theme</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Using Super Mario Bros to learn about JavaScript Constructor functions and Prototypes</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4220/34875075235_ca81d8ec12_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step1&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4220/34875075235_ca81d8ec12_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today we'll use Nintendo characters to help us learn about JavaScript Constructor functions and Prorotypes! &lt;br /&gt;
Creating objects in JavaScript is a very common task, but often times you'll want to define multiple objects that share the same properties and the same basic structure. For example, if I were programming a video game and I wanted to define some players as objects, I might do so like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerOne&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Mario&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;coins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lives&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then after I defined player one, I want to define player two. Except the problem is that I unintentionally define player two in a slightly inconsistent way:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerTwo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Luigi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;See what's inconsistent here? The name property is the same in both player objects, but for playerOne's &quot;coins&quot; property, playerTwo has &quot;score&quot; instead!
And the players lives/health is stored inconsistently as well.

What we need is a way to easily formalize our objects, making it easy to create many different objects with the same properties, but with different values for each property.

&lt;h2&gt;Enter the constructor function!&lt;/h2&gt;
&lt;p&gt;What's a constructor function? 
It's a function that can construct... Objects! Lots of objects!
The first step is to just make a function like normal with the name of the type of object that we want to construct, in this case Player:
&lt;/p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;p&gt;(BTW, The tradition is to always capitalize the first letter for these constructor functions!)

Right now we'll leave the constructor function empty.
Now we'll create our object by declaring a new variable using the keyword &quot;new&quot; to create a new object from the Player constructor function.
&lt;/p&gt;



&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  

 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


 &lt;p&gt;This creates a new object, calling the Player constructor function to create the new object. Obviously there is still nothing inside the constructor function, so let's add some code. Let's try:&lt;/p&gt;



&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mario&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;



&lt;p&gt;Wait, that's no goodâ€¦ I want to be able to re-use this constructor function for multiple different players, and all of the players can't be named Mario! We need the constructor function to be able to take in a name parameter. When it is called, it will create a new player, passing in that name parameter for the current object that it is constructing.&lt;/p&gt;




&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mario&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;



&lt;p&gt;So now that we have the basic constructor working, we can call it again passing in a new name&lt;/p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;luigi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Luigi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;p&gt;This is how we can create many similar objects in a very standardized way.
So let's create some more properties in the constructor function. Let's give each player a number of collected coins, and a number of lives. For the parameters, we'll use the variables &quot;c&quot; and &quot;l&quot; respectively.
&lt;/p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;coins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mario&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;luigi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Luigi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;




&lt;p&gt;This is a much more efficient way of creating many similar objects, but how to we display the data related to each object? &lt;/p&gt;

&lt;h2&gt;Enter prototypes!&lt;/h2&gt;

&lt;p&gt;Prototypes can allow us to attach new functions onto individual objects, rather than declaring functions inside of the constructor function, which would affect ALL of the constructor's objects at the same time. In this way, our prototype will just bolt a function onto an individual object. In this case, a function that outputs a console log about a player.
Every JavaScript object has a prototype.
Functions (including our player function) are also objects, and so they have prototypes too. We can use the prototype to get the player object to do things, like tell us the player's name

&lt;/p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Itâ€™s a me,&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;p&gt;We use the keyword &quot;this&quot; to output the name property of whatever the current object is, because this prototype could be re-used on any player object we want.

The &quot;displayName&quot; part is just something made up, you could use anything that is descriptive of what the prototype is getting the object to do.

Now to have the Mario player output its name, we just type

&lt;/p&gt;



&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt; &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 

 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;



&lt;p&gt;And it will log &quot;It's a me, Mario&quot; to the console!
We can do the same for Luigi, too.

&lt;/p&gt;



&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;coins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mario&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;luigi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Luigi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;It's a me,&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//outputs &quot;It's a me, Mario&quot;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;luigi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//outputs &quot;It's a me, Luigi&quot;&lt;/span&gt;


 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


 &lt;p&gt;And we can do more than just displaying information about the players, we can also use prototypes to bolt on new functions that actually change the values of the player objects too. For example, we can give each player a new 1UP like this:&lt;/p&gt;



&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;coins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mario&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;luigi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Luigi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;It's a me,&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;levelUp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lives&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1UP! I now have&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lives&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; lives&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//outputs &quot;It's a me, Mario&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;luigi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//outputs &quot;It's a me, Luigi&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;levelUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//outputs &quot;1UP! I now have 4 lives&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;luigi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;levelUp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//outputs &quot;1UP! I now have 3 lives&quot;&lt;/span&gt;


 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;



&lt;p&gt;The efficient thing about this code is that all of the properties are consistent and standardized, and the whole thing is scalable because I can add as many new players as I want without having to repeat any code! Each new player already knows about its properties while still acting independently of each other. 

Everything that each player can do is based on both the constructor function and the prototypes which have bolted new functions onto them after the fact.

Video games can be so informative ;)
&lt;/p&gt;
&lt;/p&gt;
</description>
        <pubDate>Wed, 24 May 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//code/2017/05/24/constructors,prototypes,super-mario/</link>
        <guid isPermaLink="true">http://localhost:4000//code/2017/05/24/constructors,prototypes,super-mario/</guid>
      </item>
    
      <item>
        <title>How to use JavaScript to write dynamic inline styles</title>
        <description>&lt;p&gt;Using JavaScript, we can programmatically change our webpage's style and presentation. One way to do this is to use JS to select an element and give it an inline style.&lt;br /&gt; First we'll need to select an element. Let's assume we have an HTML element with the ID of &quot;mainContent&quot;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mainContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mainContent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once we have selected the element that we want to style, we can use the same styles that we would use in CSS. For example, to change font color:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;mainContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#ff0000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//changes font color to red&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or to add 50 pixels of margin around the selected element&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;mainContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;50px&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Any style property that can be written usng CSS can also be dynamically written using JavaScript as a string. JS uses the same pixel units as CSS. Just make sure the semicolon is outside of the string quotes. &lt;br /&gt;
One important difference between style properties written in JavaScript vs CSS is that JavaScript uses camelCase, while CSS uses hyphen-spaced-text. for example, in CSS we would write this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#mainContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;repeat-x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;While in JavaScript, we would write that same line in CamelCase:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;mainContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;backgroundRepeat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;repeat-x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is not just an arbitrary quirk of JS. In JS, any &quot;-&quot; would be interpreted as &quot;minus&quot; &lt;br /&gt;for example, saying &quot;background minus repeat&quot; which wouldn't make any sense. &lt;br /&gt; Keep in mind that we obviously will still want to keep most of our styles seperate in our CSS file, away from our .js file. This method is only useful if we NEED to have a style property changed dynamically in a way that CSS alone wouldn't be capible of by it's self.&lt;/p&gt;
</description>
        <pubDate>Mon, 22 May 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//code/2017/05/22/JS-for-inline-styles/</link>
        <guid isPermaLink="true">http://localhost:4000//code/2017/05/22/JS-for-inline-styles/</guid>
      </item>
    
      <item>
        <title>What is the &quot;Ternary&quot; operator, and how is it used?</title>
        <description>&lt;p&gt;As opposed to a Binary operator which focus on two elements (such as &quot;foo &amp;gt; bar&quot; or &quot;dollars / hour) a Ternary operator instead focuses on 3 elements. 
The ternary operator has 2 symbols, the question mark &quot;?&quot; and the colon &quot;:&quot; the syntax looks like this  &lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Condition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is the equivilent of a mini if/else statement. For example, the following code with if/else statements could be refactored with the ternary operator.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerOne&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerTwo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;highScore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;playerOne&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;highScore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;highScore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerTwo&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The above code is equivilant to the following code, which replaces if/else statements with a single ternary operator&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerOne&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerTwo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;highScore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;playerOne&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerOne&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerTwo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The condition is &quot;Is the value of playerOne greater than playerTwo?&quot; The result can either be true or false. If it's true, we will assign the value of playerOne to the variable highScore.
If it's false, we will assign the value of playerTwo to the variable highScore.&lt;/p&gt;

</description>
        <pubDate>Sun, 14 May 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//code/2017/05/14/Ternary-operator/</link>
        <guid isPermaLink="true">http://localhost:4000//code/2017/05/14/Ternary-operator/</guid>
      </item>
    
      <item>
        <title>Free clean water for anybody, anywhere.</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4173/34321372361_167bd3877f_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;finished&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4173/34321372361_167bd3877f_z.jpg&quot; width=&quot;100%&quot; alt=&quot;finished&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nobody should ever be without clean water. Any region in the world with a few inches of rainfall can capture that rain water, filter it, purify it, and put it to good use. My friend has an urban farm where she grows fruit, vegetables, and herbs. But there was no reliable source of water on her land and she had to have water hauled in.
So I designed and built this simple structure on her land to capture, filter, and store rain water for agricultural irrigation. With additional filtration and sterilization, this system could also be used to provide safe drinking water.&lt;/p&gt;

&lt;p&gt;Now I'm putting the plans and instructions online so that anybody around the world can build their own off-grid stand alone rainwater collection system. This particular structure is 128 square feet, measuring 8 feet wide, 16 feet long, and 8 feet 6 inches tall. We contacted the local building department and they told us that we don't need a permit for any structures less than 200 square feet.&lt;/p&gt;

&lt;h2&gt;Step 1: Posts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4161/34410035526_c7662f130f_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step1&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4161/34410035526_c7662f130f_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used 10 foot long 4x4 posts buried 48 inches deep in the ground with concrete. The posts are spaced 8 feet apart from each other. The front posts are cut 7 feet 5 inches tall, and the back posts are cut 6 feet 5 inches tall.&lt;/p&gt;

&lt;h2&gt;Step 2: Beams and Braces&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4192/34292059622_675638d4e7_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step2&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4192/34292059622_675638d4e7_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beams are horizontal 8 foot boards that sit on the posts. Braces are the smaller 4 foot long boards at 45 degree angles that provide support.&lt;/p&gt;

&lt;h2&gt;Step 3: Rafters&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4182/34292059732_edce1c4208_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step3&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4182/34292059732_edce1c4208_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step3&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; The rafters are 10 foot long 2x6s with a 6 inch overhang on the low end, and about a foot of overhang on the high end&lt;/p&gt;

&lt;h2&gt;Step 4: Purlins&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4163/34410035326_a97f060ebb_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step4&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4163/34410035326_a97f060ebb_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step4&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Purlins are long thin strips of wood that measure 1 1/2 x 1 1/2 inches and 8 feet long. They sit on top of the rafters spaced 1 foot apart. Purlins provide support for the roof pannels, as well as a surface to drive the roofing nails into.&lt;/p&gt;

&lt;h2&gt;Step 5: Roofing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4176/34292059062_fa0ac8269f_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step5&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4176/34292059062_fa0ac8269f_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step5&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used corrugated asphalt roofing panels from a company called &quot;Ondura&quot; They measure 6.5 feet by 4 feet and they are very flexible and easy to cut and work with.&lt;/p&gt;

&lt;h2&gt; Step 6: Gutters, Pipes, Containers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4162/34292072632_ebeb5944b7_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step6&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4162/34292072632_ebeb5944b7_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step6&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The metal gutters are only needed on the low pitch of the roof. There is a filter in the gutter to keep leaves and debris out of the water. I attached a 3 inch PVC pipe to the downspout of the gutter using a two part epoxy called JB Weld. The PVC pipes direct the gutter water into three water containers. Once the water fills the first container, it will flow up into the pipe to the second container, etc... Each container can hold 255 gallons of water, so all three hold a total of 765 gallons of water. We could continue to add as many containers as we wanted.&lt;/p&gt;

&lt;h2&gt;Step 7: Collect free water&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4185/34292058302_b9109ebc3a_z.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step7&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4185/34292058302_b9109ebc3a_z.jpg&quot; width=&quot;100%&quot; alt=&quot;step7&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will attach irrigation lines to the containers to water our crops this summer. This system could be cheaply and easily replicated anywhere in the world that has a few inches of rainfall, especially in places with no groundwater for a well, or in situations where the cost of drilling a well would be too cost prohibitive.&lt;/p&gt;

&lt;h2&gt;Step 9: Optional: Enclose Walls to Make Greenhouse Nursery&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://c1.staticflickr.com/5/4185/34683269665_1e70cf208c_h.jpg&quot; data-lity=&quot;&quot; data-lity-desc=&quot;step7&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4185/34683269665_1e70cf208c_h.jpg&quot; width=&quot;100%&quot; alt=&quot;step8&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the future, we would like to enclose the walls. I build the high side facing south, so we could put big windows covering the whole wall to create a greenhouse using transparent plastic roofing panels. The north, east, and west walls can be framed using strong pallets, clad in painted plywood. The inside of the pallets can be stuffed with straw for insulation.&lt;/p&gt;

&lt;h2&gt;Download my 3D model to edit and build your own!&lt;/h2&gt;

&lt;p class=&quot;centerText&quot;&gt;To interact with 3D models, make sure you have enabled &lt;a href=&quot;https://offcampushousing.uconn.edu/auth/help-cookies&quot; target=&quot;_blank&quot; class=&quot;redlink&quot;&gt;third party cookies and site data.&lt;/a&gt;
You'll also need a browser that supports &lt;a href=&quot;https://get.webgl.org/&quot; target=&quot;_blank&quot; class=&quot;redlink&quot;&gt;WebGL.&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;centerText&quot;&gt;Click the image below to interact with the 3D model. 
After the model loads, click the &quot;&amp;lt;&quot; Icon to the right for camera control options.&lt;br /&gt;
&lt;a class=&quot;redlink&quot; target=&quot;blank&quot; href=&quot;https://3dwarehouse.sketchup.com/model/bb060212-66ae-4580-996b-505f48eec904/8x16-rainwater-catchment-a-irrigation-system&quot;&gt;Click here&lt;/a&gt; to download this model as an editable SketchUp file.&lt;/p&gt;

&lt;iframe src=&quot;https://3dwarehouse.sketchup.com/embed.html?mid=bb060212-66ae-4580-996b-505f48eec904&amp;amp;width=580&amp;amp;height=326&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; width=&quot;100%&quot; height=&quot;600px&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Thu, 04 May 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//life/2017/05/04/free-water/</link>
        <guid isPermaLink="true">http://localhost:4000//life/2017/05/04/free-water/</guid>
      </item>
    
      <item>
        <title>What's the difference between a &quot;do...while&quot; loop and a &quot;while&quot; loop in JavaScript?</title>
        <description>&lt;p&gt;So, JavaScript has a &quot;while&quot; loops and a &quot;do... while&quot; loops. sure, they're written a little bit differently, but ther're mostly the same right?&lt;br /&gt;
Wrong!&lt;br /&gt;
Here is the syntax for a while loop:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//initialize a counter&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//sets the loop's condition&lt;/span&gt;
 	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//code block to execute for each iteration of the loop&lt;/span&gt;
 	&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//increment the counter by 1 for each iteration of the loop&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//outputs 1 2 3 4 5 6 7 8 9&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the syntax for a do... while loop:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//initialize a counter&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
 	&lt;span class=&quot;c1&quot;&gt;//code block to execute for each iteration of the loop&lt;/span&gt;
 	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 	&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//increment the counter by 1 for each iteration of the loop&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//sets the loop's condition&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//outputs 1 2 3 4 5 6 7 8 9&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The most important difference to note here is that in a &quot;while&quot; loop, the loop's condition is checked &lt;i&gt;before&lt;/i&gt; the code block within the curly braces is able to be executed. &lt;br /&gt;
So if the condition of a &quot;while&quot; loop is false, the code block won't be executed.
&lt;br /&gt;&lt;br /&gt;
In contrast, in a &quot;do... while&quot; loop, the loop's condition is checked &lt;i&gt;after&lt;/i&gt; the first iteration of the code block within the curly braces has already been executed. 
This is an important distinction, because a &quot;do... while&quot; loop's code block is always executed at least once, regardless of whether it's condition is true or false. 
&lt;br /&gt;&lt;br /&gt;
However, a &quot;while&quot; loop's code is only executed if the loop's condition is true. 
&lt;br /&gt;
&quot;while&quot; loops are used far more often than &quot;do... while&quot; loops because you would typically want to check whether a loop's condition is true before you execute the first iteration of it's code block. I also find &quot;while&quot; loops to be easier to read.&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//code/2017/04/23/while-and-dowhile/</link>
        <guid isPermaLink="true">http://localhost:4000//code/2017/04/23/while-and-dowhile/</guid>
      </item>
    
      <item>
        <title>How does the JavaScript method &quot;indexOf&quot; and &quot;lastIndexOf&quot; work?</title>
        <description>&lt;p&gt;The indexOf method will index a string to find whether or not a particular term or word appears in a string or not, and it also indicates what character position that term or word appears. 

For example, we have a string that says &quot;Hail to the king, baby!&quot;
and we want to find out what character position the word &quot;king&quot; appears at. &lt;/p&gt;
&lt;p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hail to the king, baby!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;king&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;That word appears at character position &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;//outputs &quot;That word appears at position 12&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;



&lt;p&gt;But what if we try to find the index of a word that doesn't appear in the string, like the word &quot;prince&quot;? By default, the indexOf method will return &quot;-1&quot; if a word is not found.&lt;/p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hail to the king, baby!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;c1&quot;&gt;//outputs -1 &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;p&gt;But that &quot;-1&quot; isn't very informative unless you already know what it means, so it would be more useful to set up an if statement to handle cases where the word is not found.&lt;/p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hail to the king, baby!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;That word isn't here!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;That word appears at character position &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
 &lt;span class=&quot;c1&quot;&gt;//outputs &quot;That word isn't here!&quot;&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


&lt;p&gt;But what if you have multiple occurances of the same word or term, and you want to find the last occurance?
The method &quot;lastIndexOf&quot; would be useful for that.
For example, if you have the string that has the same word twice, like &quot;Hail to the king, baby! I'm the king!&quot;
and you want to find the position of the last occurance of the word &quot;king&quot; you could use the following code&lt;/p&gt;


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hail to the king, baby! I'm the king!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;king&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;That word appears at character position &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
 &lt;span class=&quot;c1&quot;&gt;//outputs &quot;That word appears at character position 32&quot;&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

 
 &lt;p&gt;
 This is just one simple example of a use-case for the built in JavaScript methods &quot;indexOf&quot; and &quot;lastIndexOf&quot;
&lt;/p&gt;

&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//code/2017/04/23/indexOf-and-lastIndexOf/</link>
        <guid isPermaLink="true">http://localhost:4000//code/2017/04/23/indexOf-and-lastIndexOf/</guid>
      </item>
    
      <item>
        <title>console.log's friends, The four other types of JavaScript console messages</title>
        <description>&lt;p&gt;The most common type of console message is console.log() which simply logs the contents within the parentheses out to the browser's developer tools console section. However, there are additional console message types that could be useful in different situations.&lt;/p&gt;

&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/33388813124/in/dateposted-public/&quot; title=&quot;console messages&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2939/33388813124_cc51ef2eb6_m.jpg&quot; width=&quot;800&quot; alt=&quot;console messages&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;br /&gt;
&lt;a href=&quot;http://blog.500tech.com/browser-console-tricks/&quot; style=&quot;color:grey&quot;&gt;image courtesy of 500Tech&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The first is &lt;span style=&quot;color:grey&quot;&gt;console.debug&lt;/span&gt;, which looks the same as a normal console.log() message, and is very useful for debugging code.&lt;/p&gt;

&lt;p&gt;Then there is &lt;span style=&quot;color:blue&quot;&gt;console.info(),&lt;/span&gt; which will make a little blue info icon appear next to the console message. This could be useful to help keep track of some status information in your code, and make it easy to distinguish from other console messages.&lt;/p&gt;

&lt;p&gt;The next is &lt;span style=&quot;color:orange&quot;&gt;console.warn()&lt;/span&gt; which will make a yellow warning icon with an exclemation mark next to the console message. The warning icon is useful to indicate that a potential error could occur, but has not yet happened.&lt;/p&gt;

&lt;p&gt;The third is &lt;span style=&quot;color:red&quot;&gt;console.error()&lt;/span&gt; which will make a red error icon next to the console mesage. An error counter will also appear in the status section of the browser's developer tools console. This message is useful to indicate that a problem has already occured. The message should describe what the error is, and ideally offer some solution. Creating custom error messages could be very useful for debugging, rather than only trying to interprit javadcript's default error messages.&lt;/p&gt;

&lt;p&gt;It could be helpful to output different console message types for different situations. Their colors and icons make different console messages easy to spot while scanning through console output.&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//code/2017/04/23/console-messages/</link>
        <guid isPermaLink="true">http://localhost:4000//code/2017/04/23/console-messages/</guid>
      </item>
    
      <item>
        <title>Document Object Model Overview</title>
        <description>&lt;p&gt;&quot;DOM&quot; stands for Document Object Model.&lt;br /&gt;
&lt;b&gt;Document&lt;/b&gt; = A web page (Either viewed through the broweser, or the source code)&lt;br /&gt;
&lt;b&gt;Object&lt;/b&gt; = Any pieces of a HTML (titles, paragraphs, headings, lists, etc...)&lt;br /&gt;
&lt;b&gt;Model&lt;/b&gt; =  The relationship that different pieces of HTML have to each other, represented in a tree hierarchy.&lt;br /&gt;&lt;br /&gt;

The DOM is an agreed upon set of terms that allows a JavaScript program to navigate an HTML document. The DOM allows a JS program to traverse into any webpage to manipulate elements of that page. So the DOM is more of a concept, rather than a language.&lt;br /&gt;&lt;br /&gt;

For example, a JS program can traverce the DOM to get the text of the title, to get the second paragraph, even to get the third link in the menu and set it's CSS to display:none&lt;br /&gt;&lt;br /&gt;

By traversing the DOM, a JS program could change the background color of all paragraphs with a class of &quot;important&quot;, or change a link's behavior so that it performs a JS function when clicked.&lt;/p&gt;

&lt;p&gt;The Document Object Model is the means by which a JacaScript program can interact with HTML on a webpage.
The DOM represents HTML elements in terms of &quot;nodes&quot; on a tree hierarchy structure. Every html page is made of these nodes. Look at the HTML code on the left, and compare it to the simple tree structure on the right.&lt;/p&gt;

&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/33844356290/in/dateposted-public/&quot; title=&quot;nodes of the DOM&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2915/33844356290_71b41fe740_m.jpg&quot; width=&quot;1000&quot; alt=&quot;nodes of the DOM&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;In this simplistic example, we can see a tree with one node per html element.
But an html file is more than just elements! There are attributes, text, comments etc. There is a lot of text in this example that isn't being represented on the DOM tree. Also, there are typically one or more attribures as part of an HTML element, as well as comments.&lt;p&gt;
&lt;p&gt;
All of those things are seen as different kinds of nodes in the DOM.
The reason for this is so that we can use javascript to get to them directly.
JS can target the text inside of the second paragraph, find the source attricute of an image tag, etc...

 So the real DOM diagram would be quite complex and crowded if we displayed ALL of the nodes. There would not only be nodes that represent elements, but also nodes for attributes, text, comments etc...&lt;/p&gt;

&lt;a data-flickr-embed=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/33844356500/in/dateposted-public/&quot; title=&quot;ALL THE NODES&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/5/4172/33844356500_ce297ae542_m.jpg&quot; width=&quot;650px&quot; alt=&quot;ALL THE NODES&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;
There are 12 different types of nodes in total:&lt;br /&gt;
1 element nodes,&lt;br /&gt;
2 attribute nodes,&lt;br /&gt;
3 text nodes&lt;br /&gt;
4 CDATA (text that will NOT be parsed by a parser) nodes&lt;br /&gt;
5 entity refrence nodes,&lt;br /&gt;
6 entity nodes,&lt;br /&gt;
7 processing instruction nodes,&lt;br /&gt;
8 comment nodes,&lt;br /&gt;
9 document nodes,&lt;br /&gt;
10 documentType nodes,&lt;br /&gt;
11 documentFragment nodes,&lt;br /&gt;
12 notation nodes.&lt;br /&gt;
&lt;/p&gt;

&lt;p&gt;This has been only a general overview of the DOM. For more in depth knowledge about the DOM, check out &lt;a href=&quot;https://www.w3schools.com/js/js_htmldom.asp&quot; class=&quot;redlink&quot; target=&quot;blank&quot;&gt;this collection of articles by w3schools&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000//code/2017/04/23/DOM-overview/</link>
        <guid isPermaLink="true">http://localhost:4000//code/2017/04/23/DOM-overview/</guid>
      </item>
    
      <item>
        <title>I stayed at an organic fruit tree orchard in Hawaii for a month... This is what I learned</title>
        <description>&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/33335045343/in/album-72157680202854482/&quot; title=&quot;ocean-jungle&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2811/33335045343_d2b115d79b_m.jpg&quot; width=&quot;1000&quot; alt=&quot;ocean-jungle&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;W.W.O.O.F stands for World Wide Opportunities on Organic Farms. Essentially, it's about connecting small organic farms with people who want to learn how to grow organic healthy food. You learn to farm by working a set number of hours in exchange for room and board. You can WWOOF almost anywhere on earth, which is awesome because WWOOFing makes the cost living while traveling ridiculously cheap.&lt;/p&gt;

&lt;p&gt;I've always loved to travel different parts of the US, bouncing back and forth from my home state of southeast Florida, then up north to the metro Detroit area of Michigan, and out west to the bay area of California. &lt;br /&gt;
I always travel solo, not wanting anybody else's schedules, obligations or hesitations to stand between me and a good adventure. &lt;/p&gt;

&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/34146353945/in/album-72157680202854482/&quot; title=&quot;cliffs&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2818/34146353945_a6a6e07206_m.jpg&quot; width=&quot;1000&quot; alt=&quot;cliffs&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;I've also always enjoyed gardening, from growing veggies in the back yard to volunteering at local community gardens. So when I found out about an opportunity to learn organic farming while traveling to the tropical paradise of Hawaii, I jumped at that opportunity.&lt;/p&gt;
&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/34146354205/in/album-72157680202854482/&quot; title=&quot;banana closeup&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2813/34146354205_989950674c_m.jpg&quot; width=&quot;1000&quot; alt=&quot;banana closeup&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://wwoof.net/&quot; class=&quot;redlink&quot;&gt;WWOOF website&lt;/a&gt; has many organic farms available to crash at in exchange for a few hours of work. Each farm is different, but most expect 5 hours of work for 5 days a week in exchange for a place to sleep and free food. Accommodations vary, from a spare bedroom, a private cabin, or just a place to set up a tent. I made sure to find out as much as I could about what I was getting into&lt;/p&gt;

&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/33335045213/in/album-72157680202854482/&quot; title=&quot;oechard&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2820/33335045213_2d63470aee_m.jpg&quot; width=&quot;1000&quot; alt=&quot;orchard&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;I found a 3 acre fruit tree orchard in the Hawaiian Acres subdivision of the Big Island of Hawaii. It had a modest off grid cabin, meaning no electric or water utilities. All electricity came from a single 240 watt solar panel, and non-potable water was gathered from the roof, filtered, and heated with propane for showers.
Drinking water was brought in from town in water containers.&lt;/p&gt;

&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/33335046493/in/album-72157680202854482/&quot; title=&quot;cabin&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2922/33335046493_3ab03f819a_m.jpg&quot; width=&quot;1000&quot; alt=&quot;cabin&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;I worked on 2 separate properties, the first being a well established 3 acre fruit tree orchard.
The second property is where I spent most of my effort. It was an untouched quarter acre that we were developing to become a new smaller farm.&lt;br /&gt;
&lt;h2&gt;I spent most of my effort transforming this empty lot into a fruit tree orchard&lt;/h2&gt;
&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/34146354125/in/album-72157680202854482/&quot; title=&quot;before-trees&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2933/34146354125_0058397079_m.jpg&quot; width=&quot;1000&quot; alt=&quot;before-trees&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

 &lt;p&gt;
 There are generally two (main) different types of lava rock on Hawaii. One is called &quot;Pahoehoe&quot; It takes the form of a basaltic lava forming smooth undulating slabs of hard lava rock, almost like asphalt. Since this kind of lava rock forms in large slabs, it is nearly impossible to dig through with mere hand tools. &lt;/p&gt;
 &lt;h2&gt;An example of &quot;Pahoehoe&quot; lava rock by the ocean.&lt;/h2&gt;
 &lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/33335044973/in/album-72157680202854482/&quot; title=&quot;pahoehoe&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2805/33335044973_d04d8d03e3_m.jpg&quot; width=&quot;1000&quot; alt=&quot;pahoehoe&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

 &lt;p&gt;The second kind of lava rock is called &quot;A'a&quot;. A'a lava looks completely different than pahoehoe lava, it takes the form of very sharp chunky rocks. A'a rock on the surface are very light weight, as they have many little holes and air pockets. &lt;/p&gt;
&lt;h2&gt;An example of &quot;A'a&quot; rock. I dug this hole in the rocks to plant a fruit tree.&lt;/h2&gt;
 &lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/34146353655/in/album-72157680202854482/&quot; title=&quot;hole&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2931/34146353655_7eee73e0b7_m.jpg&quot; width=&quot;1000&quot; alt=&quot;hole&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

 &lt;p&gt;The process takes about 15 minutes or more to dig a hole big enough for a baby fruit tree  (approximately 2 feet deep, by 3 feet around) it takes lots of patience, but that is the reality of farming on a lava field.
 Of course, lava rocks aren't a terribly nutritious medium for trees to grow in. So I mixed two 5 gallon buckets of cinder-soil and two 5 gallon buckets of macadamia nut compost into the holes with the fruit tree. &lt;/p&gt;

 &lt;h2&gt;Here is a baby banana tree growing in a medium of macadamia nut compost and cinder soil&lt;/h2&gt;
 &lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/34146353525/in/album-72157680202854482/&quot; title=&quot;mac-nut-compost&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2869/34146353525_12bef9300f_m.jpg&quot; width=&quot;1000&quot; alt=&quot;mac-nut-compost&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

 &lt;p&gt;There are lots of macadamia nut orchards on the big Island of Hawaii, so macadamia nut shells are an abundant natural byproduct of this industry, perfect for composting with fruit trees. after each tree is planted, it needs to be fertilized.  A couple of cups of dolomite and dried chicken manure pellets are sprinkled over the soil before the tree is covered with a deep layer of wood chip mulch. &lt;/p&gt;

&lt;h2&gt;This baby banana tree is mulched with wood-chips. It kinda looks like a flag&lt;/h2&gt;
&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/34146354325/in/album-72157680202854482/&quot; title=&quot;baby-banana-flag&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2909/34146354325_ea73ba09fa_m.jpg&quot; width=&quot;1000&quot; alt=&quot;baby-banana-flag&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;The mulch serves multiple purposes. It smothers out weeds around the tree, helps to retain moisture in the hot dry climate, and as the mulch eventually breaks down and decomposes, it's nutrients will leak down to feed the fruit tree roots.&lt;/p&gt;

&lt;p&gt;
...And finally, here are the 33 fruit trees I planted in the last 4 weeks living and working on the Big Island of Hawaii! &lt;/p&gt;
&lt;h2&gt;Click the arrows on the edges of the frame to scroll through the album and see all of the trees I planted!&lt;/h2&gt;
&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/albums/72157682814337435&quot; title=&quot;all the trees i planted in hawaii&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/3/2884/33761595540_d00b4761e0_m.jpg&quot; width=&quot;1000&quot; alt=&quot;all the trees i planted in hawaii&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;I would reccomend anyone who is interested in traveling and gardening to look into the &lt;a href=&quot;http://wwoof.net/&quot; class=&quot;redlink&quot;&gt;WWOOF website&lt;/a&gt; and do some research. &lt;/p&gt;

&lt;p&gt; I absolutely love planting trees, it is one of the most rewarding activities, especially fruit trees that will eventually provide an abundance of healthy organic food for decades to come in the future!&lt;/p&gt;
&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Feb 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000//life/2017/02/16/travel/</link>
        <guid isPermaLink="true">http://localhost:4000//life/2017/02/16/travel/</guid>
      </item>
    
      <item>
        <title>Create a Paper Cut-Out Animation with After Effects</title>
        <description>&lt;article&gt;
	&lt;p&gt; In this tutorial you'll learn how to create this stylized paper cut-out animation using After Effects and a few image textures!&lt;/p&gt;
	&lt;img src=&quot;https://imageshack.us/a/img924/6792/Dzw5TX.gif&quot; /&gt;

	&lt;p&gt;To make this animation we'll only need these 3 paper textures below. Click on each of the pictures to download them from flickr.&lt;/p&gt;

	&lt;h2&gt;Crumply paper texture&lt;/h2&gt;
	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027711262/in/dateposted-public/&quot; title=&quot;crumply brown paper&quot;&gt;&lt;img src=&quot;https://c7.staticflickr.com/1/538/32027711262_ac04bb10a7_m.jpg&quot; width=&quot;240&quot; height=&quot;196&quot; alt=&quot;crumply brown paper&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

	&lt;h2&gt;Cardboard texture&lt;/h2&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027732112/in/dateposted-public/&quot; title=&quot;cardboard&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/389/32027732112_5b193dabf5_m.jpg&quot; width=&quot;184&quot; height=&quot;240&quot; alt=&quot;cardboard&quot; /&gt;&lt;/a&gt;

	&lt;h2&gt;Brown paper texture&lt;/h2&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32057894261/in/dateposted-public/&quot; title=&quot;brown_paper&quot;&gt;&lt;img src=&quot;https://c6.staticflickr.com/1/723/32057894261_d45b0b8b18_m.jpg&quot; width=&quot;240&quot; height=&quot;172&quot; alt=&quot;brown_paper&quot; /&gt;&lt;/a&gt;

	&lt;p&gt;We'll start by making a new composition sized 1280 x 720. Then click File &amp;gt; Import &amp;gt; Multiple Files, and import our 3 new image textures.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32137632216/in/album-72157676949094332/&quot; title=&quot;1 - import multiple files&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/464/32137632216_0a92d9a60d_m.jpg&quot; width=&quot;178&quot; height=&quot;240&quot; alt=&quot;1 - import multiple files&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

	&lt;p&gt;Then drag the cardboard image texture into the composition and scale it down to 23 so that it fits within the composition. We'll name this layer &quot;Trunk 1&quot;&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800741290/in/album-72157676949094332/&quot; title=&quot;2 - drag cardboard texture into comp&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/477/31800741290_bcce1484ee_m.jpg&quot; width=&quot;240&quot; height=&quot;141&quot; alt=&quot;2 - drag cardboard texture into comp&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

	&lt;p&gt;Use the pen tool to draw this mask pattern on the cardboard texture. This shape will be be our basic tree trunk shape&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32137631266/in/album-72157676949094332/&quot; title=&quot;3 - draw mask on cardboard texture&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/357/32137631266_aa8ee9a096_m.jpg&quot; width=&quot;240&quot; height=&quot;150&quot; alt=&quot;3 - draw mask on cardboard texture&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;To make it look like this shape was cut out of a real piece of cardboard, we will need to make the edges look less straight and clean. Search the Effects Search bar for &quot;Roughen Edges&quot; and set Border to 45.00 and set Scale to 76.0&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800738480/in/album-72157676949094332/&quot; title=&quot;4 - trunk roughen edges&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/547/31800738480_1e6ba2c071_m.jpg&quot; width=&quot;240&quot; height=&quot;176&quot; alt=&quot;4 - trunk roughen edges&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;We can adjust the color a little bit to bring out the warm tones in the image texture. Search the effect search bar for &quot;Curves&quot;. Curves is my favorite color correction tool in after effects, it lets you adjust the brightness/contrast and the red/green/blue values by clicking and draging on the diagonal curves line. Right now we only need to change the RGB tab to Red. Now click and drag up on the middle of the diagonal curve line to increase the red just a little bit&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31365451833/in/album-72157676949094332/&quot; title=&quot;5 - red curves&quot;&gt;&lt;img src=&quot;https://c2.staticflickr.com/1/551/31365451833_feb3870a62_m.jpg&quot; width=&quot;240&quot; height=&quot;196&quot; alt=&quot;5 - red curves&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Next, we'll start making the tree's &quot;leaves&quot; Start by importing the &quot;crumply paper texture&quot; and scale it down to 88. We'll name this layer &quot;Leaves 1&quot;.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31365451023/in/album-72157676949094332/&quot; title=&quot;6 - import crumply paper texture&quot;&gt;&lt;img src=&quot;https://c8.staticflickr.com/1/652/31365451023_84f039f07a_m.jpg&quot; width=&quot;240&quot; height=&quot;204&quot; alt=&quot;6 - import crumply paper texture&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;We can use the same Curves color correction effect to change our crumply paper texture to a nice leafy green color&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027420782/in/album-72157676949094332/&quot; title=&quot;7 - make crumply texture green&quot;&gt;&lt;img src=&quot;https://c7.staticflickr.com/1/593/32027420782_da528854bb_m.jpg&quot; width=&quot;240&quot; height=&quot;150&quot; alt=&quot;7 - make crumply texture green&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;We can use the pen tool again to cut the leaves shape out of the image texture. Make sure you use the pen tool's bezier curves on every point to make the rounded edges. Just click and drag with the pen tool when drawing points to enable the bezier curves.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027420372/in/album-72157676949094332/&quot; title=&quot;8 - crumply paper cut mask&quot;&gt;&lt;img src=&quot;https://c5.staticflickr.com/1/524/32027420372_88d05d12b0_m.jpg&quot; width=&quot;240&quot; height=&quot;178&quot; alt=&quot;8 - crumply paper cut mask&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Use the Roughen Edges effect on the Leaves 1 layer and change Border to 22.00 and Scale to 193.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31365448263/in/album-72157676949094332/&quot; title=&quot;9 - roughen leave edges&quot;&gt;&lt;img src=&quot;https://c8.staticflickr.com/1/765/31365448263_26c09e794a_m.jpg&quot; width=&quot;240&quot; height=&quot;159&quot; alt=&quot;9 - roughen leave edges&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;That's basically all it takes to make a tree! Now we can make copies of this tree by selecting both the &quot;Trunk 1&quot; and &quot;Leaves 1&quot; layers and Edit &amp;gt; Copy and Edit &amp;gt; Paste. Rename the copies to &quot;Trunk 2&quot;, &quot;Leaves 2&quot; and &quot;Trunk 3&quot;, &quot;Leaves 3&quot; I would also recommend changing the layer colors for each copy to make it easier for you to tell them apart in the time-line. To do this, just click the little colored box to the left of the layer name and select a new color for each copy. I set layers 1 to red, layers 2 to blue, and layers 3 to yellow. To make each copy look more unique, I made some minor adjustments to the mask points of each copy, so that they don't just look like completely identical copies.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027419842/in/album-72157676949094332/&quot; title=&quot;10 - tree copies&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/479/32027419842_0892cda610_m.jpg&quot; width=&quot;240&quot; height=&quot;186&quot; alt=&quot;10 - tree copies&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;To make this effect look even more like a physical paper cut out, we can add a drop-shadow to each tree layer to make it look like cut out pieces of paper are laying on a surface. But it will be difficult to see the drop shadow with that black background! We can toggle the transparency grid background by clicking the little checker icon just below the viewport.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027419262/in/album-72157676949094332/&quot; title=&quot;11 - toggle transparency grid&quot;&gt;&lt;img src=&quot;https://c7.staticflickr.com/1/300/32027419262_0e1ca0e9eb_m.jpg&quot; width=&quot;240&quot; height=&quot;166&quot; alt=&quot;11 - toggle transparency grid&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;To make the drop-shadow of our first tree, we'll need to copy and paste both the Leaves 1 layer and the Trunk 1 layer. Rename the copied layers &quot;Leaves 1 shadow&quot; and Trunk 1 shadow respectively.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027419202/in/album-72157676949094332/&quot; title=&quot;12 - copy first tree layers&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/781/32027419202_71648717f2_m.jpg&quot; width=&quot;240&quot; height=&quot;166&quot; alt=&quot;12 - copy first tree layers&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Select the &quot;Leaves 1 shadow&quot; layer and then click the curves effect. Drag the RGB curve all the way down to make the layer completely black. Do the same for &quot;Trunk 1 shadow&quot;.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32027419032/in/album-72157676949094332/&quot; title=&quot;13 - blacken layers&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/420/32027419032_4c0bf94613_m.jpg&quot; width=&quot;240&quot; height=&quot;134&quot; alt=&quot;13 - blacken layers&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now search the Effects Search bar for Gaussian Blur and add it to the &quot;Leaves 1 Shadow&quot; layer. Turn the Blurieness setting up to 45. Then add Gaussian Blur to the &quot;Trunk 1 shadow&quot; layer, but this time turn the blurieness setting all the way up to 120.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31365444093/in/album-72157676949094332/&quot; title=&quot;14 - blur shadow&quot;&gt;&lt;img src=&quot;https://c6.staticflickr.com/1/349/31365444093_ff33fd34d8_m.jpg&quot; width=&quot;240&quot; height=&quot;129&quot; alt=&quot;14 - blur shadow&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

	&lt;p&gt;Now that we have the shadow, move the &quot;leaves shadow 1&quot; and &quot;trunk shadow 1&quot; layer under the&quot;trunk 1&quot; and &quot;Leaves 1&quot; layers. This gives us a nice drop-shadow effect behind the tree, making it look more like a physical paper cut out.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31365442843/in/album-72157676949094332/&quot; title=&quot;15 - move shadown under&quot;&gt;&lt;img src=&quot;https://c4.staticflickr.com/1/406/31365442843_aed8c916a0_m.jpg&quot; width=&quot;240&quot; height=&quot;165&quot; alt=&quot;15 - move shadown under&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now repeat the drop-shadow process for the other trees.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31365441243/in/album-72157676949094332/&quot; title=&quot;16 - all drop shadows&quot;&gt;&lt;img src=&quot;https://c4.staticflickr.com/1/544/31365441243_b305551e02_m.jpg&quot; width=&quot;240&quot; height=&quot;156&quot; alt=&quot;16 - all drop shadows&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;To make all of these tree layers easier to deal with, let's pre-compose each tree into it's own composition. Select all 4 layers of each tree and then click Layer &amp;gt; Pre-compose to combine all 4 of each tree into it's own composition. Now each tree will be separated into it's own composition, and it will make managing the layers much easier.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31365438043/in/album-72157676949094332/&quot; title=&quot;17 - pre compose trees&quot;&gt;&lt;img src=&quot;https://c4.staticflickr.com/1/433/31365438043_67fe0b3900_m.jpg&quot; width=&quot;240&quot; height=&quot;138&quot; alt=&quot;17 - pre compose trees&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now that we have our trees pre-composed into their own compositions, let's start creating the environment that they'll be in! We'll start with the rolling green hills in the background. Import our brown paper texture and put it under our trees layers. don't worry about it's scale for now because we'll be resizing it again later.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800750990/in/album-72157676949094332/&quot; title=&quot;18 - new background&quot;&gt;&lt;img src=&quot;https://c7.staticflickr.com/1/351/31800750990_8a6c15e229_m.jpg&quot; width=&quot;240&quot; height=&quot;141&quot; alt=&quot;18 - new background&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now go back to the Effects Search bar and type in Curves again. We'll increase the green quite a bit, and decrease the blue slightly to get a nice grassy green color.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32057613861/in/album-72157676949094332/&quot; title=&quot;19 - green background hills&quot;&gt;&lt;img src=&quot;https://c6.staticflickr.com/1/636/32057613861_b8bf805247_m.jpg&quot; width=&quot;240&quot; height=&quot;105&quot; alt=&quot;19 - green background hills&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now use the pen tool to cut out the rolling wavey hill shape for the background. Again, make sure to use the pen tool's bezier curves by clicking and dragging every time you make a new point! We can add a drop-shadow to the hills layer the same way we did for the trees. Just copy the hills layer, make the copy black, add a blur effect and put it behind the original. &lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800740090/in/album-72157676949094332/&quot; title=&quot;20 - cut mask on background&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/616/31800740090_8d9f422ff6_m.jpg&quot; width=&quot;240&quot; height=&quot;105&quot; alt=&quot;20 - cut mask on background&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now that we have our background hills, Let's make the sky! We can use the same brown paper image texture that we used for the hills.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800749070/in/album-72157676949094332/&quot; title=&quot;21 - background sky&quot;&gt;&lt;img src=&quot;https://c7.staticflickr.com/1/691/31800749070_d3998d3c6c_m.jpg&quot; width=&quot;240&quot; height=&quot;105&quot; alt=&quot;21 - background sky&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Use the Curves color correction effect to increase the blue and decrease the red slightly. And that's about all we need to do to the sky!&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32057611871/in/album-72157676949094332/&quot; title=&quot;22 - sky color&quot;&gt;&lt;img src=&quot;https://c8.staticflickr.com/1/462/32057611871_5c2d798865_m.jpg&quot; width=&quot;240&quot; height=&quot;131&quot; alt=&quot;22 - sky color&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now we can make the ground layer. We can use the same crumply paper layer for the ground that we used for the tree's leaves. just change the position so that it is close to the bottom and mostly under the trees, as illustrated in the picture.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800747050/in/album-72157676949094332/&quot; title=&quot;23 - ground&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/433/31800747050_915505c6fd_m.jpg&quot; width=&quot;240&quot; height=&quot;138&quot; alt=&quot;23 - ground&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt; We can use the same Roughen Edges effect again to make the ground layer look more bumpy and organic. Just change Border to 12 and Scale to 83.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32137635626/in/album-72157676949094332/&quot; title=&quot;24 - roughen edges on ground layer&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/654/32137635626_900c881ed5_m.jpg&quot; width=&quot;240&quot; height=&quot;138&quot; alt=&quot;24 - roughen edges on ground layer&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;We basically have created everything we need. We can copy more trees if we need to later but for now let's get to the really fun part... 3D layers! Well, more like 2.5D... You'll see what I mean in a minute! But first, whenever we work with 3D layers, we need to add a Camera to our composition. Click Layer &amp;gt; New &amp;gt; Camera &amp;gt; OK. A window will pop us saying &quot;Camera and Lights do not affect 2D layers&quot; click OK. So in the next step, we'll turn our 2D layers into 3D layers!&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800744930/in/album-72157676949094332/&quot; title=&quot;25 - new camera&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/576/31800744930_83c520bd09_m.jpg&quot; width=&quot;240&quot; height=&quot;138&quot; alt=&quot;25 - new camera&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;To turn our 2D layers into 3D layers, click the little 3D cube icon for all of the layers.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32137633416/in/album-72157676949094332/&quot; title=&quot;26 - enable 3d layers&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/600/32137633416_7e736e689c_m.jpg&quot; width=&quot;240&quot; height=&quot;142&quot; alt=&quot;26 - enable 3d layers&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;You'll notice that we have a new layer called &quot;Camera 1&quot;. This is what we'll use to control the point of view. However, the camera's position controls aren't very easy to control. So we'll make a new null object and parent the camera to that null object. that way, whenever we move the null's position, the camera's position will match it as well. Click Layer &amp;gt; New &amp;gt; Null Object and name it cam-control. Check the 3D cube icon for cam-control as well to make it a 3D layer. You can parent the camera to the Cam-Control by clicking the camera's &quot;pick whip&quot; icon, which looks like a little spiral, and dragging it to the cam-control layer.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/31800743370/in/album-72157676949094332/&quot; title=&quot;27 - parent camera to cam control&quot;&gt;&lt;img src=&quot;https://c3.staticflickr.com/1/753/31800743370_6e96a0dfa5_m.jpg&quot; width=&quot;240&quot; height=&quot;79&quot; alt=&quot;27 - parent camera to cam control&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now we can control the camera's position by changing the position of the cam-control layer! But before we do that, let's set our Z positions on all of our layers. Up until now, we've only been moving in the X and Y dimensions, but now that we're working in 3D we have a whole extra dimension to work with! We'll start by pushing the sky's Z position waaaay back to 3000 so that it's far back in the background. After pushing it so far back, we'll also need to scale it up to 183 so that it covers the entire viewport.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32137629976/in/album-72157676949094332/&quot; title=&quot;28 - push sky position back&quot;&gt;&lt;img src=&quot;https://c1.staticflickr.com/1/442/32137629976_cb8b3d97d2_m.jpg&quot; width=&quot;240&quot; height=&quot;79&quot; alt=&quot;28 - push sky position back&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;Now we'll do the same thing for our background hills. But our hills need to be closer to the camera than the background sky, so we'll set the hills Z position to 1500, then scale it up to 247.&lt;/p&gt;

	&lt;a data-flickr-embed=&quot;true&quot; data-header=&quot;true&quot; href=&quot;https://www.flickr.com/photos/146669889@N04/32137633086/in/album-72157676949094332/&quot; title=&quot;29 - hill z index&quot;&gt;&lt;img src=&quot;https://c7.staticflickr.com/1/403/32137633086_6154f6df61_m.jpg&quot; width=&quot;240&quot; height=&quot;79&quot; alt=&quot;29 - hill z index&quot; /&gt;&lt;/a&gt;&lt;script async=&quot;&quot; src=&quot;//embedr.flickr.com/assets/client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;


	&lt;p&gt;The Z index for our trees can remain at 0, but we can bring the ground layer a little bit closer to the camera by setting it's Z index to -200 and it's scale to 200.&lt;/p&gt;

	&lt;p&gt;Once we have our Z index positioning setup the way we want it, we can adjust the Cam-Control's X position and observe how the different layers appear to move based on their position on the Z axis. The Sky being the furthest back at a Z position of 3000 moves much slower than the hills at Z 1500, which are a bit closer to the camera. The trees movement is much more noticeable at a Z position of 0, and the ground layer is closest to the camera, so it's movement is the most pronounced of all.&lt;/p&gt;

	&lt;img src=&quot;https://imageshack.us/a/img923/8108/v08aSQ.gif&quot; /&gt;


	&lt;p&gt;To animate our cam-control's X axis like in the demo GIF, move to the beginning of the timeline and change the cam-control's X position to 640. Then click the cam-control's position stopwatch to enable keyframe animation. Then move 3 seconds forward in the timeline and change the cam-control's X position 76. This should automatically create a keyframe 3 seconds in the time line. Then move the timeline forward another 3 seconds, and move the cam-control's X position back to it's original position of 640. This will create a 6 second loop of the camera moving left to right. You can make the camera keyframes ease in by right clicking over each keyfame and clicking Keyframe Assistant &amp;gt; Easy Ease.&lt;/p&gt;



	&lt;p&gt;Now we can optionally copy more trees in behind the first row of trees. Just copy and paste the trees we already created and move their Z position back to 800. We can darken them a little bit too, to make it look like they are in the shadow of the foreground trees by using the Curves effect.&lt;/p&gt;

	&lt;img src=&quot;https://imageshack.us/a/img924/6792/Dzw5TX.gif&quot; /&gt;

	&lt;p&gt;And we're finished! You can move the camera's Y position to fly up above the trees, or even increase the camera's Z position to fly through the trees, like you're running through a forest! use your imagination! &lt;br /&gt; This is the same basic method that I used for &lt;a href=&quot;https://www.youtube.com/watch?v=7IP0Ch1Va44&amp;amp;spfreload=10&quot;&gt;my paper animation&lt;/a&gt;, so if you haven't already seen it, check it out! :)
&lt;/p&gt;&lt;/article&gt;
</description>
        <pubDate>Fri, 06 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000//design/2017/01/06/paper-cutout-texture/</link>
        <guid isPermaLink="true">http://localhost:4000//design/2017/01/06/paper-cutout-texture/</guid>
      </item>
    
  </channel>
</rss>